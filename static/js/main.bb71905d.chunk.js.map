{"version":3,"sources":["components/Burger/Ingredient/Ingredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","store/actions/burgerBuilderActions.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","axiosApi.js","constants.js","helpers/orderHelpers.js","store/actions/ordersAction.js","components/UI/Spinner/Spinner.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","assets/images/burger_logo.png","components/UI/Logo/Logo.js","components/Navigation/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Layout/Layout.js","components/Order/OrderItem/OrderItem.js","components/ErrorBoundary/ErrorBoundary.js","containers/Orders/Orders.js","App.js","store/reducers/burgerBuilderReducer.js","store/reducers/ordersReducer.js","index.js"],"names":["Ingredient","type","className","Burger","ingredients","ingList","Object","keys","forEach","amount","i","push","length","BuildControl","props","disabled","onClick","remove","add","BuildControls","totalPrice","map","addIngredient","removeIngredient","purchasable","onOrder","Backdrop","show","Modal","close","style","transform","opacity","children","Button","join","OrderSummary","textTransform","onCancel","onContinue","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_MODAL_OPEN","INIT_BURGER_BUILDER","setModalOpen","isOpen","payload","BurgerBuilder","history","dispatch","useDispatch","useSelector","state","burgerBuilder","showPurchaseModal","useEffect","useMemo","reduce","sum","el","purchaseCancelHandler","CheckoutSummary","cancel","next","width","margin","axiosApi","axios","create","baseURL","INGREDIENTS","salad","price","cheese","meat","bacon","normalizeOrders","orders","id","order","acc","ORDER_REQUEST","ORDER_SUCCESS","ORDER_FAILURE","FETCH_ORDERS_REQUEST","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILURE","fetchOrderSuccess","createOrder","orderData","a","post","error","Spinner","ContactData","loading","useState","name","email","street","postal","customer","setCustomer","onInputChange","e","target","value","prev","preventDefault","console","log","form","onSubmit","placeholder","onChange","Checkout","match","replace","goBack","path","render","Logo","src","burgerLogo","alt","NavigationItem","to","exact","NavigationItems","Toolbar","Layout","OrderItem","ingredientOutput","customerOutput","field","ErrorBoundary","hasError","errorMessage","errorInfo","this","setState","Component","Orders","fetchLoading","fetchError","fecthError","shallowEqual","get","response","data","ordersComponents","App","component","initialState","burgerBuilderReducer","action","ordersReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bb71905d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Ingredient.css';\r\n\r\nconst Ingredient = ({type}) => {\r\n  switch (type) {\r\n    case 'bread-top':\r\n      return (\r\n        <div className=\"BreadTop\">\r\n          <div className=\"Seeds1\"/>\r\n          <div className=\"Seeds2\"/>\r\n        </div>\r\n      );\r\n    case 'bread-bottom':\r\n      return <div className=\"BreadBottom\"/>;\r\n    case 'meat':\r\n      return <div className=\"Meat\"/>\r\n    case 'salad':\r\n      return <div className=\"Salad\"/>;\r\n    case 'cheese':\r\n      return <div className=\"Cheese\"/>;\r\n    case 'bacon':\r\n      return <div className=\"Bacon\"/>;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default Ingredient;","import React from 'react';\r\nimport './Burger.css';\r\nimport Ingredient from \"./Ingredient/Ingredient\";\r\n\r\nconst Burger = ({ingredients}) => {\r\n  const ingList = [];\r\n\r\n  Object.keys(ingredients).forEach(type => {\r\n    const amount = ingredients[type];\r\n    for (let i = 0; i < amount; i++) {\r\n      ingList.push(<Ingredient key={type + i} type={type} />);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"Burger\">\r\n      <Ingredient type=\"bread-top\"/>\r\n      {ingList.length > 0 ? ingList : <p>Please add ingredients</p>}\r\n      <Ingredient type=\"bread-bottom\"/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Burger;","import React from 'react';\r\nimport './BuildControl.css';\r\n\r\nconst BuildControl = props => {\r\n  return (\r\n    <div className=\"BuildControl\">\r\n      <div className=\"Label\">{props.type}</div>\r\n      <button className=\"Less\" disabled={props.disabled} onClick={props.remove}>Less</button>\r\n      <button className=\"More\" onClick={props.add}>More</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControl;","import React from 'react';\r\nimport './BuildControls.css';\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst BuildControls = props => {\r\n  return (\r\n    <div className=\"BuildControls\">\r\n      <p>Current price: <strong>{props.totalPrice} KGS</strong></p>\r\n      {Object.keys(props.ingredients).map(type => {\r\n        return (\r\n          <BuildControl\r\n            key={type}\r\n            type={type}\r\n            disabled={props.ingredients[type] === 0}\r\n            add={() => props.addIngredient(type)}\r\n            remove={() => props.removeIngredient(type)}\r\n          />\r\n        );\r\n      })}\r\n      <button\r\n        className=\"OrderButton\"\r\n        disabled={!props.purchasable}\r\n        onClick={props.onOrder}\r\n      >\r\n        ORDER NOW\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControls;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = ({show, onClick}) => {\r\n  return show ? <div className=\"Backdrop\" onClick={onClick}/> : null;\r\n};\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport './Modal.css';\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        show={props.show}\r\n        onClick={props.close}\r\n      />\r\n      <div\r\n        className=\"Modal\"\r\n        style={{\r\n          transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n          opacity: props.show ? '1' : '0',\r\n        }}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={['Button', props.type].join(' ')}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst OrderSummary = props => {\r\n  return (\r\n    <>\r\n      <h3>Your order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul>\r\n        {Object.keys(props.ingredients).map(type => (\r\n          <li key={type}>\r\n            <span style={{textTransform: 'capitalize'}}>\r\n              {type}\r\n            </span>: {props.ingredients[type]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <p><strong>Total Price: {props.totalPrice} KGS</strong></p>\r\n      <p>Continue to checkout?</p>\r\n      <Button type=\"Danger\" onClick={props.onCancel}>CANCEL</Button>\r\n      <Button type=\"Success\" onClick={props.onContinue}>CONTINUE</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderSummary;","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_MODAL_OPEN = 'SHOW_MODAL_OPEN';\nexport const INIT_BURGER_BUILDER = 'INIT_BURGER_BUILDER'\n\nexport const addIngredient = ingType => ({type: ADD_INGREDIENT, payload: ingType});\nexport const removeIngredient = ingType => ({type: REMOVE_INGREDIENT, payload: ingType});\nexport const setModalOpen = isOpen => ({type: SET_MODAL_OPEN, payload: isOpen})\nexport const initBurgerBuilder = () => ({type: INIT_BURGER_BUILDER});","import React, {useEffect, useMemo} from 'react';\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addIngredient,\r\n    initBurgerBuilder,\r\n    removeIngredient,\r\n    setModalOpen\r\n} from \"../../store/actions/burgerBuilderActions\";\r\n\r\n\r\n\r\nconst BurgerBuilder = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    // const {ingredients, totalPrice, showPurchaseModal} = useSelector(state => ({   //sometimes it will be necessary\r\n    //     ingredients: state.burgerBuilder.ingredients,\r\n    //     totalPrice: state.burgerBuilder.totalPrice,\r\n    //     showPurchaseModal: state.burgerBuilder.showPurchaseModal,\r\n    // }), shallowEqual);\r\n    //\r\n\r\n\r\n    const ingredients = useSelector(state => state.burgerBuilder.ingredients);\r\n    const totalPrice = useSelector(state => state.burgerBuilder.totalPrice);\r\n    const showPurchaseModal = useSelector(state => state.burgerBuilder.showPurchaseModal);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(initBurgerBuilder());\r\n    }, [dispatch])\r\n\r\n    const addIngredientHandler = type => {\r\n        dispatch(addIngredient(type));\r\n    };\r\n\r\n    const removeIngredientHandler = type => {\r\n        dispatch(removeIngredient(type));\r\n    };\r\n\r\n    const purchasable = useMemo(() => {\r\n        const totalIngredients = Object.keys(ingredients)\r\n            .map(type => ingredients[type])\r\n            .reduce((sum, el) => sum + el, 0);\r\n\r\n        return totalIngredients > 0;\r\n    }, [ingredients]);\r\n\r\n    const purchaseHandler = () => {\r\n        dispatch(setModalOpen(true));\r\n    };\r\n\r\n    const purchaseCancelHandler = () => {\r\n       dispatch(setModalOpen(false));\r\n    };\r\n\r\n    const purchaseContinueHandler = () => {\r\n        history.push('/checkout');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={showPurchaseModal}\r\n                close={purchaseCancelHandler}\r\n            >\r\n                <OrderSummary\r\n                    ingredients={ingredients}\r\n                    totalPrice={totalPrice}\r\n                    onCancel={purchaseCancelHandler}\r\n                    onContinue={purchaseContinueHandler}\r\n                />\r\n            </Modal>\r\n            <Burger ingredients={ingredients}/>\r\n            <BuildControls\r\n                ingredients={ingredients}\r\n                totalPrice={totalPrice}\r\n                addIngredient={addIngredientHandler}\r\n                removeIngredient={removeIngredientHandler}\r\n                purchasable={purchasable}\r\n                onOrder={purchaseHandler}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default BurgerBuilder;\r\n","import React from 'react';\r\nimport './CheckoutSummary.css';\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst CheckoutSummary = ({ingredients, cancel, next}) => {\r\n  return (\r\n    <div className=\"CheckoutSummary\">\r\n      <h1>We hope it tastes well!</h1>\r\n      <div style={{width: '100%', margin: 'auto'}}>\r\n        <Burger ingredients={ingredients}/>\r\n      </div>\r\n      <Button type=\"Danger\" onClick={cancel}>CANCEL</Button>\r\n      <Button type=\"Success\" onClick={next}>CONTINUE</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSummary;","import axios from 'axios';\r\n\r\nconst axiosApi = axios.create({\r\n  baseURL: 'https://food-burger-25b44-default-rtdb.europe-west1.firebasedatabase.app' // Your URL here!\r\n});\r\n\r\n// axiosApi.interceptors.request.use(req => {\r\n//   console.log('[in request interceptor', req);\r\n//   return req;\r\n// });\r\n//\r\n// axiosApi.interceptors.response.use(res => {\r\n//   console.log('[in request interceptor', res);\r\n//   return res;\r\n// }, err => {\r\n//   console.log('[In error response interceptor]', err);\r\n//   throw err;\r\n// });\r\nexport default axiosApi;","export const INGREDIENTS = {\n    salad: {price: 5},\n    cheese: {price: 20},\n    meat: {price: 50},\n    bacon: {price: 30},\n};\n\nexport const BASE_PRICE = 20;","import {BASE_PRICE, INGREDIENTS} from \"../constants\";\n\nexport const normalizeOrders = orders => {\n    return Object.keys(orders).map(id => {\n        const order = orders[id];\n        const price = Object.keys(order.ingredients).reduce((acc, type) => {\n            return acc + INGREDIENTS[type].price * order.ingredients[type]\n        }, BASE_PRICE)\n        return {...order, id, price};\n    });\n}","import axiosApi from \"../../axiosApi\";\nimport {BASE_PRICE, INGREDIENTS} from \"../../constants\";\nimport {normalizeOrders} from \"../../helpers/orderHelpers\";\n\nexport const ORDER_REQUEST = 'ORDER_REQUEST';\nexport const ORDER_SUCCESS = 'ORDER_SUCCESS';\nexport const ORDER_FAILURE = 'ORDER_FAILURE';\n\nexport const FETCH_ORDERS_REQUEST = 'FETCH_ORDERS_REQUEST';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAILURE = 'FETCH_ORDERS_FAILURE';\n\n\nexport const orderRequest = () => ({type: ORDER_REQUEST});\nexport const orderSuccess = () => ({type: ORDER_SUCCESS});\nexport const orderFailure = error => ({type: ORDER_FAILURE, payload: error});\n\nexport const fetchOrderRequest = () => ({type: FETCH_ORDERS_REQUEST});\nexport const fetchOrderSuccess = orders => ({type: FETCH_ORDERS_SUCCESS, payload: orders});\nexport const fetchOrderFailure = error => ({type: FETCH_ORDERS_FAILURE, payload: error});\n\n\nexport const createOrder = orderData => {\n    return async dispatch => {\n        try{\n            dispatch(orderRequest());\n            await axiosApi.post('/orders.json', orderData);\n            dispatch(orderSuccess());\n        }catch(error) {\n            dispatch(orderFailure(error));\n            throw error;\n        }\n    }\n}\n\nexport const fetchOrders = () => {\n    return async dispatch => {\n        try{\n            dispatch(fetchOrderRequest());\n            const response = await axiosApi.get('/orders.json');\n            const orders = normalizeOrders(response.data)\n            dispatch(fetchOrderSuccess(orders));\n        }catch(error) {\n            dispatch(fetchOrderFailure(error));\n        }\n    }\n}\n\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => (\n  <div className=\"Spinner\">Loading...</div>\n);\n\nexport default Spinner;","import React, {useState} from 'react';\r\nimport './ContactData.css';\r\nimport Button from \"../../../components/UI/Button/Button\"\r\nimport {createOrder as order} from \"../../../store/actions/ordersAction\";\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst ContactData = ({ingredients, history}) => {\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(state => state.orders.loading);\r\n\r\n    const [customer, setCustomer] = useState({\r\n        name: '',\r\n        email: '',\r\n        street: '',\r\n        postal: ''\r\n    });\r\n\r\n    const onInputChange = e => {\r\n        const {name, value} = e.target;\r\n\r\n        setCustomer(prev => ({\r\n            ...prev,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const createOrder = async e => {\r\n        e.preventDefault();\r\n        try{\r\n            await dispatch(order({customer, ingredients}));\r\n            history.push('/')\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n\r\n        // try {\r\n        //     await axiosApi.post('/orders.json', {\r\n        //         customer,\r\n        //         ingredients,\r\n        //     });\r\n        // } finally {\r\n        //     setLoading(false);\r\n        //     history.replace('/');\r\n        // }\r\n    };\r\n\r\n    let form = (\r\n        <form onSubmit={createOrder}>\r\n            <input\r\n                className=\"Input\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Your Name\"\r\n                value={customer.name}\r\n                onChange={onInputChange}\r\n            />\r\n            <input\r\n                className=\"Input\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Your Mail\"\r\n                value={customer.email}\r\n                onChange={onInputChange}\r\n            />\r\n            <input\r\n                className=\"Input\"\r\n                type=\"text\"\r\n                name=\"street\"\r\n                placeholder=\"Street\"\r\n                value={customer.street}\r\n                onChange={onInputChange}\r\n            />\r\n            <input\r\n                className=\"Input\"\r\n                type=\"text\"\r\n                name=\"postal\"\r\n                placeholder=\"Postal Code\"\r\n                value={customer.postal}\r\n                onChange={onInputChange}\r\n            />\r\n            <Button type=\"Success\">ORDER</Button>\r\n        </form>\r\n    );\r\n\r\n    if (loading) {\r\n        form = <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"ContactData\">\r\n            <h4>Enter your Contact Data</h4>\r\n            {form}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactData;","import React from 'react';\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport {Route} from \"react-router-dom\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Checkout = ({history, match}) => {\r\n    const ingredients = useSelector(state => state.burgerBuilder.ingredients);\r\n\r\n  const checkoutCancelHandler = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const checkoutContinueHandler = () => {\r\n    history.replace('/checkout/contact-data');\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSummary\r\n        ingredients={ingredients}\r\n        next={checkoutContinueHandler}\r\n        cancel={checkoutCancelHandler}\r\n      />\r\n      <Route\r\n        path={match.path + '/contact-data'}\r\n        render={props => (\r\n          <ContactData ingredients={ingredients} {...props} />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;","export default __webpack_public_path__ + \"static/media/burger_logo.ec69c7f6.png\";","import React from 'react';\nimport './Logo.css'\nimport burgerLogo from '../../../assets/images/burger_logo.png';\n\nconst Logo = () => {\n    return (\n        <div className=\"Logo\">\n            <img src={burgerLogo} alt=\"BurgerApp\"/>\n        </div>\n    );\n};\n\nexport default Logo;","import React from 'react';\nimport './NavigationItem.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst NavigationItem = ({to, exact, children}) => {\n    return (\n        <li className=\"NavigationItem\">\n            <NavLink to={to} exact={exact}>{children}</NavLink>\n        </li>\n    );\n};\n\nexport default NavigationItem;","import React from 'react';\nimport './Navigation.css'\nimport NavigationItem from \"../NavigationItem/NavigationItem\";\n\nconst NavigationItems = () => {\n    return (\n        <div className=\"NavigationItems\">\n            <NavigationItem to='/' exact>Burger</NavigationItem>\n            <NavigationItem to='/orders' >Orders</NavigationItem>\n        </div>\n    );\n};\n\nexport default NavigationItems;","import React from 'react';\nimport './Toolbar.css';\nimport Logo from \"../../UI/Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\n\nconst Toolbar = () => {\n    return (\n        <header className='Toolbar'>\n            <div className=\"Toolbar-Logo\">\n                <Logo/>\n            </div>\n            <nav><NavigationItems/></nav>\n        </header>\n    );\n};\n\nexport default Toolbar;","import React from 'react';\nimport './Layout.css';\nimport Toolbar from \"../../Navigation/Toolbar/Toolbar\";\n\nconst Layout = ({children}) => {\n    return (\n        <>\n            <Toolbar/>\n         <main className=\"Layout-Content\">\n             {children}\n         </main>\n        </>\n    );\n};\n\nexport default Layout;","import React from 'react';\nimport './OrderItem.css';\n\nconst OrderItem = ({ingredients, customer, price}) => {\n    const ingredientOutput = Object.keys(ingredients).map(type => (\n        <span key={type}>{type} ({ingredients[type]})</span>\n    ))\n    const customerOutput = Object.keys(customer).map(field => (\n        <span key={field}><strong>{field}</strong>: {customer[field]}</span>\n    ))\n\n    // if (Math.random() > 0.7) throw new Error('Well, This happened')\n    return (\n        <div className=\"OrderItem\">\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Customer: {customerOutput}</p>\n            <p>Price: <strong>{price} KGZ</strong></p>\n        </div>\n    );\n};\n\nexport default OrderItem;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n    state = {\n        hasError: false,\n        errorMessage: '',\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({hasError: true, errorMessage: error});\n    }\n\n    render() {\n        if (this.state.hasError){\n            return <div>Something wrong happened</div>\n        }else{\n            return this.props.children\n        }\n    }\n}\n\nexport default ErrorBoundary;","import React, {useEffect} from 'react';\nimport './Orders.css'\nimport OrderItem from \"../../components/Order/OrderItem/OrderItem\";\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport ErrorBoundary from \"../../components/ErrorBoundary/ErrorBoundary\";\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\nimport {fetchOrders} from \"../../store/actions/ordersAction\";\n\n\nconst Orders = () => {\n    const dispatch = useDispatch();\n    const {fetchLoading, fetchError, orders} = useSelector(state => ({\n        fetchLoading: state.orders.fetchLoading,\n        fetchError: state.orders.fecthError,\n        orders: state.orders.orders\n    }), shallowEqual);\n\n    useEffect(() => {\n        dispatch(fetchOrders())\n    }, [dispatch])\n\n    let ordersComponents = orders.map(order => (\n       <ErrorBoundary  key={order.id}>\n           <OrderItem\n               ingredients={order.ingredients}\n               customer={order.customer}\n               price={order.price}\n           />\n       </ErrorBoundary>\n    ))\n\n    if (fetchLoading) {\n        ordersComponents = <Spinner/>;\n    }else if(fetchError){\n        ordersComponents = <div>Sorry, could not fetch Orders</div>\n    }\n    return ordersComponents\n\n};\n\nexport default Orders;","import React from 'react';\r\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Checkout from \"./containers/Checkout/Checkout\";\r\nimport Layout from \"./components/UI/Layout/Layout\";\r\nimport Orders from \"./containers/Orders/Orders\";\r\n\r\nconst App = () => (\r\n    <Layout>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={BurgerBuilder}/>\r\n            <Route path=\"/checkout\" component={Checkout}/>\r\n            <Route path='/orders' component={Orders}/>\r\n            <Route render={() => <h1>Not found</h1>}/>\r\n        </Switch>\r\n    </Layout>\r\n);\r\n\r\nexport default App;\r\n","import {BASE_PRICE, INGREDIENTS} from \"../../constants\";\nimport {ADD_INGREDIENT, INIT_BURGER_BUILDER, REMOVE_INGREDIENT, SET_MODAL_OPEN} from \"../actions/burgerBuilderActions\";\n\nconst initialState = {\n    ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0,\n    },\n    totalPrice: BASE_PRICE,\n    showPurchaseModal: false,\n}\nconst burgerBuilderReducer = (state = initialState, action) => {\n    switch(action.type){\n        case INIT_BURGER_BUILDER:\n            return {...initialState};\n        case ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.payload]: state.ingredients[action.payload] + 1,\n                },\n                totalPrice: state.totalPrice + INGREDIENTS[action.payload].price,\n            }\n        case REMOVE_INGREDIENT:\n            if(state.ingredients[action.payload] <= 0){\n                return state;\n            }\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.payload]: state.ingredients[action.payload] - 1,\n                },\n                totalPrice: state.totalPrice - INGREDIENTS[action.payload].price,\n            }\n        case SET_MODAL_OPEN:\n            return {...state, showPurchaseModal: action.payload}\n        default:\n            return state;\n    }\n};\n\nexport  default burgerBuilderReducer;","import {\n    FETCH_ORDERS_FAILURE,\n    FETCH_ORDERS_REQUEST,\n    FETCH_ORDERS_SUCCESS,\n    ORDER_FAILURE,\n    ORDER_REQUEST,\n    ORDER_SUCCESS\n} from \"../actions/ordersAction\";\n\nconst initialState = {\n    loading: false,\n    fetchLoading: false,\n    error: null,\n    fetchError: null,\n    orders: [],\n};\n\nconst ordersReducer  = (state = initialState, action)=> {\n    switch (action.type){\n        case ORDER_REQUEST:\n            return {...state, loading: true};\n        case ORDER_SUCCESS:\n            return {...state, loading: false};\n        case ORDER_FAILURE:\n            return {...state, error: action.payload, loading: false}\n        case FETCH_ORDERS_REQUEST:\n            return {...state, fetchLoading: true, fetchError: null};\n        case FETCH_ORDERS_SUCCESS:\n            return {...state, fetchLoading: false, orders: action.payload, fetchError: null};\n        case FETCH_ORDERS_FAILURE:\n            return {...state, fetchError: action.payload, fetchLoading: false}\n        default:\n            return state;\n    }\n}\n\nexport default ordersReducer;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport thunk from \"redux-thunk\";\r\nimport {createStore, applyMiddleware, compose, combineReducers} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilderReducer\";\r\nimport ordersReducer from \"./store/reducers/ordersReducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder: burgerBuilderReducer,\r\n    orders: ordersReducer,\r\n})\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n"],"sourceRoot":""}